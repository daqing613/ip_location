apiVersion: apps/v1
kind: Deployment
metadata:
  name: ip-location
  labels:
    app: ip-location
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ip-location
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ip-location
    spec:
      containers:
      - name: ip-location
        image: iplocationacr.azurecr.io/ip-location:latest
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        env:
        - name: PORT
          value: "3000"
        livenessProbe:
          httpGet:
            path: /myip
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /myip
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: ip-location-service
  annotations:
    # Azure LoadBalancer 相关配置
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/myip"
    # 确保连接保持和正确分发流量
    service.beta.kubernetes.io/azure-load-balancer-resource-group: "${RESOURCE_GROUP}"
spec:
  selector:
    app: ip-location
  ports:
  - port: 80
    targetPort: 3000
  type: LoadBalancer
