apiVersion: apps/v1
kind: Deployment
metadata:
  name: ip-location
  labels:
    app: ip-location
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ip-location
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ip-location
    spec:
      containers:
      - name: ip-location
        image: iplocationacr.azurecr.io/ip-location:latest
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        env:
        - name: PORT
          value: "3000"
        livenessProbe:
          httpGet:
            path: /myip
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /myip
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: ip-location-service
spec:
  selector:
    app: ip-location
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ip-location-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # 确保使用正确的注解
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # 增加更多调试信息
    nginx.ingress.kubernetes.io/debug: "true"
spec:
  rules:
  - host: ip-location.example.com
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: ip-location-service
            port:
              number: 80
